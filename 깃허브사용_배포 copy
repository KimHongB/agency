1.깃허브 접속 로그인
2.깃허브 저장소
3.gitbash 사이트 다운
4.다운로드 
5. vs 코드를 띄운다
6.경로에 공백이 포함되지 않고 C:\ D:\ 에 프로젝트 폴더를 만든다
7.워킹 프로젝트에 완성된 포트폴리오를 복사해서 넣어둔다.
8.포트폴리오 폴더를 드래그 해서 VS code에 넣는다
9.준비완료

깃(Git) 한다.
10.깃설정 
git init
11.깃설정 확인하기 :목록보기 숨김항목까지 보여주기 ls -la
total 64
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:11 ./
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:01 ../
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:11 .git/
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:00 .vscode/
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:00 css/
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:00 img/
-rw-r--r-- 1 Administrator 197121 27963  2월  8 17:53 index.html
drwxr-xr-x 1 Administrator 197121     0  2월  9 10:00 scss/
-rw-r--r-- 1 Administrator 197121     0  2월  9 10:05 깃허브사용_배포

12.깃 환경설정(config) 준비하기
깃허브 리파지토리 주소 (오리진 Origin) : https://github.com/KimHongB/brando_wedding.git
깃허브 사용자 이름(아이디) :KinHongB
깃허브 사용자 이메일 : ghdql0418@naver.com
깃허브 사용자 비밀번호 : djaak10188

13. 환경설정 사용자 이름
git config user.name 'KinHongB'
git config user.email 'ghdql0418@naver.com'

14-1. 원격지(remote) 삭제하기(remove) git 주소(Orogin) 
git remote remove origin https://github.com/KimHongB/brando_wedding.git

추가된 주소 확인하기
git remote -v

주소를 다른 주소 사용하고자 또는 삭제하고자 한다면
14-2. 원격지(remote) 추가하기(add) git 주소(Orogin) 
git remote add origin https://github.com/KimHongB/brando_wedding.git

15. 스테이징 : 푸쉬(업로드)할 프로젝트를 모두(.) 무대에 올린다.
git add .

16. 커밋하기 : commit - m '브란도 웨딩웹포트폴리오'
git commit -m '브란도 웨딩웹포트폴리오'

17.푸쉬하기 : push origin master
git push origin master

18.깃허브에 브라우저에서 본인의 리파지토리 화면에서 새로고침한다.
그러면 소스가 보인다.

19.페이징 (배포) => 셋팅 클릭 설정 => 좌측화면 pages 클릭 => 우측에 블랜치
 => master 선택 => save클릭=>1분이상 대기 하고 있다가 새로고침한다 =>
 그럼 상단에 배포주소 URL이 보인다. =>visit 클릭 웹페이지 띄운다 끝

 ghdql0418.dothome.co.kr/myadmin

 /////////////////////////////////////////////////////////////////////////////////////////////////////

    깃허브 복제하기
    클론하기 clone









 ///////////////////////////////////////////////////////////////////////////////////////////////////////

 디버깅
 패치 : 깃허브 저장소(리파지토리) 오리진 마스터 에서 가져오기 오류부분 수정하고 다시 푸쉬하기

 풀 : 수정,삭제, 추가 파일 확인 내용 있으면 로컬영역 현재 수정한 작업영역
 내용을 깃허브 리파지토리 내용과 병합 (머지 merge)

 git pull origin master